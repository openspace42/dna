dna-sshd_set_config_value() {

	### ########################################################################

	### define vars.

	### ########################################################################

	sshd_config_extr_before="${tmp_project_dir}/sshd_config_extr_before"
	sshd_config_extr_after="${tmp_project_dir}/sshd_config_extr_after"
	sshd_config_extr_recombined="${tmp_project_dir}/sshd_config_extr_recombined"

    ### ########################################################################

	### evaluate arguments.

	### ########################################################################

	while getopts ":n:v:" arguments
	do
		case "${arguments}" in
			n)	sshd_option_name="${OPTARG}"
				;;
            v)  sshd_option_value="${OPTARG}"
                ;;
			\?)	dna-echo -e "Invalid option | ${n-}-$OPTARG${r-} | for function | ${n-}${FUNCNAME[0]}${r-} |."
				dna-exit
				;;
		esac
	done
	OPTIND=1

    if [ -z "${sshd_option_name-}" ]
    then
        dna-echo -e "Argument | ${n-}sshd_option_name [-n]${r-} | must be supplied for function | ${n-}${FUNCNAME[0]}${r-} |."
        dna-exit
    fi

    if [ -z "${sshd_option_value-}" ]
    then
        dna-echo -e "Argument | ${n-}sshd_option_value [-v]${r-} | must be supplied for function | ${n-}${FUNCNAME[0]}${r-} |."
        dna-exit
    fi

	### ########################################################################

	### create a temp version of sshd_config and split out any match directive
	### stanzas in order to avoid affecting them with any change.

	### ########################################################################

	sed '/^Match /Q' "${sshd_config_file}" > "${sshd_config_extr_before}"
	sed -ne '/^Match /,$ p' "${sshd_config_file}" > "${sshd_config_extr_after}"

	### ########################################################################

	### execute substitution in sshd_config_extr_before file

	#### if $sshd_option_name is found [commented or not, but not inside a
	#### phrase such as in a description commented paragraph block], then mark
	#### it as a match and determine that the setting line is present in the
	#### config file.

	if grep -qoP "^[\s#]*${sshd_option_name}.*" "${sshd_config_extr_before}"
    then

    	dna-echo -m "SSHd | ${o-}${sshd_option_name}${n-} | line found."

		#### if $sshd_option_name is not commented then mark it as a match and
		#### determine that the setting line is present and active in the config
		#### file.

    	if grep -Eq "^ *${sshd_option_name} " "${sshd_config_extr_before}"
    	then

    		dna-echo -m "SSHd | ${o-}${sshd_option_name}${n-} | syntax correct."

				#### if $sshd_option_name is already set to $sshd_option_value, then
				#### echo this, otherwise return its current value and then set it
				#### to the desired one.

    		if grep -Eq "^ *${sshd_option_name} ${sshd_option_value}" "${sshd_config_extr_before}"
    		then

    			dna-echo -m "SSHd | ${o-}${sshd_option_name}${n-} | already set to | ${y-}${sshd_option_value}${n-} |."

    		else

          		sshd_option_value_current="$(grep "^ *${sshd_option_name} *" ${sshd_config_extr_before} | sed "s|${sshd_option_name} ||g")"

    			dna-echo -m "SSHd | ${o-}${sshd_option_name}${n-} | currently set to: | ${y-}${sshd_option_value_current}${n-} |."

          		sed -i "/${sshd_option_name} /c${sshd_option_name} ${sshd_option_value}" "${sshd_config_extr_before}"

          		dna-echo -s "SSHd | ${o-}${sshd_option_name}${n-} | now set to | ${y-}${sshd_option_value}${n-} |."

        	fi

        else

			#### $sshd_option_name is present but commented or syntax is
			#### abnormal. Fix syntax and set it to $sshd_option_value.

            dna-echo -e "SSHd | ${n-}${sshd_option_name}${r-} | syntax abnormal [commented, or other]."
            dna-echo -m "Fixing syntax and setting | ${o-}${sshd_option_name}${n-} | to | ${y-}${sshd_option_value}${n-} |."

            sed -i "/^[\s#]*${sshd_option_name} /c${sshd_option_name} ${sshd_option_value}" "${sshd_config_extr_before}"

            dna-echo -s "SSHd | ${o-}${sshd_option_name}${n-} | line syntax fixed and value set to | ${y-}${sshd_option_value}${n-} |."

        fi

    else

		#### $sshd_option_name is not present. Add its line and set it to
		#### $sshd_option_value.

        dna-echo -e "SSHd | ${n-}${sshd_option_name}${r-} | line not found. Adding it now."
        dna-echo -m "Adding | ${o-}${sshd_option_name}${n-} | line and setting value to | ${y-}${sshd_option_value}${n-} |."

        sed -i "1i${sshd_option_name} ${sshd_option_value}" "${sshd_config_extr_before}"

        dna-echo -s "SSHd | ${o-}${sshd_option_name}${n-} | line added and value set to | ${y-}${sshd_option_value}${n-} |."

    fi

	### ########################################################################

	### recombine sshd_config into a single file with performed edits.

	cat "${sshd_config_extr_before}" "${sshd_config_extr_after}" > "${sshd_config_extr_recombined}"

	### diff the original and the recombined sshd_condig files to ensure only
	### one line at maximum has been altered.

	if ! [[ "$(diff "${sshd_config_file}" "${sshd_config_extr_recombined}" | grep ^[\>] | wc -l)" -le 1 ]]
	then
		dna-echo -e "More than one line alteration detected during: | ${n-}${FUNCNAME[0]}${r-} |."
		return 1
	fi

	### validate new config file before re-installing it.

	if ! sshd -f "${sshd_config_extr_recombined}" -t
	then
		echo
		dna-echo -e "The alternation performed has resulted in an invalid SSHd configuration."
		dna-echo -m "Aborting commiting the change to the live configuration file."
		return 1
	fi

	### install the new config file now that it has been validated.

	mv "${sshd_config_extr_recombined}" "${sshd_config_file}"

	### restart sshd

	service sshd restart

}
